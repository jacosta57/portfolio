{
  "GitTor": {
    "name": "GitTor - Iowa State Senior Design",
    "slug": "GitTor",
    "description": "Senior Design capstone project developing a decentralized Git hosting platform using peer-to-peer torrenting protocol. Eliminates single points of failure by distributing repositories across users. Features CLI tool (C) and full-stack web application (Spring Boot, Angular, PostgreSQL) with GPG signature verification.",
    "shortDescription": "Decentralized P2P Git hosting - Senior Design (491/492)",
    "fullDescription": "GitTor is my senior design capstone project that reimagines how developers collaborate on code by eliminating centralized hosting platforms. Traditional platforms like GitHub and GitLab create single points of failure - if the platform goes down, collaboration halts. GitTor solves this by using a peer-to-peer torrenting protocol where every contributor hosts the repository, ensuring continuous availability. The system consists of two main components: a CLI tool written in C that handles repository seeding and leeching with torrent files, and a full-stack web application (Spring Boot backend, Angular frontend) that serves as a discovery platform for repositories. Security is ensured through GPG signature verification, preventing unauthorized commits. As Quality Assurance Lead for a 6-person team, I'm responsible for establishing testing frameworks, ensuring code quality, designing frontend pages, and maintaining comprehensive documentation.",
    "problem": "Current Git hosting platforms create single points of failure. When GitHub or GitLab experience downtime, collaboration completely stops. Additionally, centralized platforms can modify repository contents, violate privacy policies, or arbitrarily block contributors.",
    "solution": "Built a decentralized system where repositories are shared via P2P torrenting. Each contributor hosts the repository, eliminating downtime risk. GPG signatures ensure only authorized contributors can commit, and torrent file hashing guarantees data integrity.",
    "tags": [
      "C",
      "Spring Boot",
      "Java",
      "Angular",
      "PostgreSQL",
      "Docker",
      "P2P",
      "Torrenting",
      "MinIO",
      "GPG"
    ],
    "images": [],
    "github": "https://github.com/orgs/GitTor-ISU/repositories",
    "liveDemo": "https://sdmay26-15.sd.ece.iastate.edu/",
    "date": "08/2025 - 05/2026",
    "featured": true,
    "category": "Senior Design",
    "features": [
      "CLI tool for repository seeding and leeching via torrents",
      "Full-stack web application for repository discovery",
      "GPG signature verification for commit authorization",
      "Decentralized repository hosting via P2P protocol",
      "MinIO storage integration for .torrent files",
      "PostgreSQL database for metadata management",
      "Dockerized application stack for easy deployment"
    ],
    "challenges": [
      "Integrating BitTorrent protocol with Git workflow",
      "Implementing secure GPG signature verification",
      "Coordinating development across CLI and web applications",
      "Ensuring data integrity across distributed peers",
      "Designing intuitive UX for complex P2P operations"
    ],
    "learnings": [
      "Advanced C programming for CLI development",
      "P2P protocol implementation and networking concepts",
      "Full-stack development with Spring Boot and Angular",
      "Quality assurance processes and testing frameworks",
      "Team leadership and cross-component coordination",
      "Security considerations with GPG cryptography",
      "Agile development methodologies in practice"
    ],
    "futureImprovements": [
      "Add support for pull request workflow in P2P environment",
      "Implement conflict resolution strategies for distributed commits",
      "Develop mobile app for repository monitoring",
      "Add analytics dashboard for repository health metrics",
      "Implement automated peer discovery mechanisms"
    ],
    "metrics": [
      "6-person team",
      "Quality Assurance Lead role",
      "Dual CLI/Web architecture"
    ],
    "supportingDocuments": [
      {
        "title": "Design Document",
        "path": "https://sdmay26-15.sd.ece.iastate.edu/docs/GitTorDesignDocument.pdf",
        "description": "Comprehensive design documentation including architecture, requirements, and implementation details"
      },
      {
        "title": "Weekly Report 1",
        "path": "https://sdmay26-15.sd.ece.iastate.edu/docs/sdmay26-15-report01.pdf",
        "description": "First weekly progress report detailing initial tasks and team contributions"
      }
    ]
  },
  "ProjectHelper": {
    "name": "Project Helper AI Chatbot",
    "slug": "ProjectHelper",
    "description": "Full-stack AI chatbot for intelligent repository analysis, addressing the challenge of understanding large codebases. Integrates AWS Bedrock with LangChain for natural language processing, allowing developers to query repositories conversationally. Features PostgreSQL database with GitHub webhooks for repository synchronization and RAG system with vector embeddings for contextually relevant responses.",
    "shortDescription": "AI chatbot for intelligent code repository analysis",
    "fullDescription": "Project Helper is an advanced AI chatbot designed to solve a common problem faced by developers: understanding large, complex codebases. When joining a new project or navigating an unfamiliar repository, developers often spend hours reading through documentation and code to understand the project structure, dependencies, and functionality. This chatbot leverages cutting-edge AI technology to provide instant, contextually-aware answers about any codebase. Built as a full-stack application, it combines AWS Bedrock's powerful language models with LangChain's orchestration capabilities to enable natural, conversational queries about code. The system maintains a PostgreSQL database that synchronizes with GitHub repositories through webhooks, ensuring the AI always has access to the latest code. Using a Retrieval-Augmented Generation (RAG) system with vector embeddings, the chatbot can understand the semantic meaning of code and provide accurate, relevant responses to developer questions.",
    "problem": "Developers waste significant time trying to understand unfamiliar codebases, searching through documentation and code files to answer simple questions about project structure, functionality, and implementation details.",
    "solution": "Built an AI-powered chatbot that allows developers to ask questions about any repository in natural language and receive instant, contextually accurate answers by leveraging RAG architecture and real-time repository synchronization.",
    "tags": [
      "TypeScript",
      "React",
      "Python",
      "LangChain",
      "AWS Bedrock",
      "PostgreSQL",
      "GitHub API",
      "AI/ML"
    ],
    "images": [],
    "github": "https://github.com/JaysonAcosta5704/project-helper",
    "liveDemo": null,
    "date": "01/2025 - Present",
    "featured": true,
    "category": "AI/ML Development",
    "features": [
      "Natural language queries about codebase structure and functionality",
      "Real-time repository synchronization via GitHub webhooks",
      "Vector embeddings for semantic code understanding",
      "RAG system for contextually relevant responses",
      "Support for multiple programming languages and frameworks",
      "PostgreSQL database for efficient data management"
    ],
    "challenges": [
      "Integrating AWS Bedrock with LangChain for optimal performance",
      "Designing an efficient vector embedding system for code",
      "Implementing real-time webhook synchronization with GitHub",
      "Balancing response accuracy with query speed"
    ],
    "learnings": [
      "Deep understanding of RAG architecture and implementation",
      "Experience with AWS Bedrock and advanced AI/ML services",
      "Skills in vector database optimization and semantic search",
      "Knowledge of GitHub webhooks and API integration",
      "Full-stack development with TypeScript, React, and Python"
    ],
    "contributions": [
      { "name": "AI/ML Integration", "percentage": 100 },
      { "name": "Backend Development", "percentage": 100 },
      { "name": "Frontend Development", "percentage": 100 },
      { "name": "Database Design", "percentage": 100 }
    ],
    "futureImprovements": [
      "Add support for multiple simultaneous repositories",
      "Implement code suggestion and refactoring capabilities",
      "Add team collaboration features for shared repositories",
      "Develop VS Code extension for in-editor access"
    ],
    "metrics": ["RAG system implementation", "Real-time GitHub synchronization"]
  },
  "FinAntes": {
    "name": "FinAntes",
    "slug": "FinAntes",
    "description": "A comprehensive financial management web application that centralizes budget tracking, spending analysis, and investment monitoring. Features interactive dashboard widgets, customizable budget categories, and data import/export capabilities with three service tiers for different user needs.",
    "shortDescription": "Financial management web app with interactive dashboards",
    "fullDescription": "FinAntes is a comprehensive financial management web application designed to give users complete control over their financial life in one centralized platform. The application features an interactive dashboard with customizable widgets that provide visual representations of budget status, spending patterns, and investment performance. Users can create personalized budget categories, set spending limits with automated alerts, and seamlessly import/export financial data from various sources. The application offers three distinct service tiers to accommodate users with different needs, from basic budget tracking to advanced investment portfolio analysis.",
    "problem": "Many financial tracking tools are either too simple or too complex for the average user, and usually don't provide a holistic view of one's finances including investments and budgeting in one place.",
    "solution": "FinAntes was designed to bridge the gap between overly simplified and overly complex financial tools. It provides a customizable experience that grows with the user's needs through three service tiers.",
    "tags": ["HTML5", "CSS3", "JavaScript", "Bootstrap", "Chart.js", "APIs"],
    "images": [
      "/images/projects/FinAntes/dashboard.png",
      "/images/projects/FinAntes/editor.png",
      "/images/projects/FinAntes/settings.png"
    ],
    "github": "https://git.las.iastate.edu/se-coms-3190/Final-Project/IP_4",
    "liveDemo": null,
    "date": "02/2025 - 05/2025",
    "featured": true,
    "category": "Web Development",
    "features": [
      "Interactive financial dashboard with customizable widgets",
      "Budget tracking with customizable categories and alerts",
      "Investment portfolio monitoring with real-time data",
      "Data import/export capabilities",
      "Three service tiers for different user needs"
    ],
    "challenges": [
      "Integrating multiple financial APIs with different data formats",
      "Creating a responsive design that works well on mobile devices",
      "Implementing secure storage for sensitive financial data"
    ],
    "learnings": [
      "Improved JavaScript skills particularly with API integration",
      "Gained experience with Chart.js for data visualization",
      "Learned strategies for handling sensitive user data"
    ],
    "contributions": [
      { "name": "Frontend Development", "percentage": 85 },
      { "name": "Backend Integration", "percentage": 75 },
      { "name": "UI/UX Design", "percentage": 70 },
      { "name": "Documentation", "percentage": 50 }
    ],
    "futureImprovements": [
      "Add machine learning for personalized financial insights",
      "Develop a mobile app version",
      "Implement multi-currency support"
    ],
    "metrics": ["3 service tiers", "Customizable budget categories"]
  },
  "Konnect": {
    "name": "Konnect",
    "slug": "Konnect",
    "description": "Android application developed in Java and XML with a group. Led frontend development, assisted with backend development and debugging, resolved over 80% of the team's bugs and reduced API response time by 50%.",
    "shortDescription": "Android app with optimized frontend and backend",
    "fullDescription": "Konnect is a collaborative Android application developed with a team of four developers using Java and XML. As the frontend lead, I was responsible for designing and implementing the user interface, ensuring a seamless user experience, and coordinating with the backend team for API integration. I also played a significant role in debugging and performance optimization, successfully resolving over 80% of the team's reported bugs and implementing optimizations that reduced API response time by 50%, significantly improving the overall app performance and user experience.",
    "problem": "The project aimed to address communication and coordination challenges within teams while providing a streamlined mobile experience that was both responsive and feature-rich.",
    "solution": "By implementing efficient API calls, optimizing the rendering process, and creating a clean architecture, we were able to deliver a high-performance application that exceeded the original requirements.",
    "tags": ["Java", "XML", "Android SDK", "RESTful APIs"],
    "images": [],
    "github": "https://github.com/JaysonAcosta5704/konnect",
    "liveDemo": null,
    "date": "08/2023 - 05/2024",
    "featured": false,
    "category": "Mobile Development",
    "features": [
      "Clean and intuitive user interface",
      "Real-time messaging capabilities",
      "Efficient API integration",
      "Robust error handling",
      "Comprehensive user settings"
    ],
    "challenges": [
      "Coordinating development tasks among team members",
      "Optimizing API calls to improve performance",
      "Ensuring consistent UI/UX across different Android devices"
    ],
    "learnings": [
      "Improved team collaboration and communication skills",
      "Gained experience with Android SDK and Java development",
      "Learned techniques for debugging and optimizing mobile applications"
    ],
    "contributions": [
      { "name": "Frontend Development", "percentage": 85 },
      { "name": "Backend Integration", "percentage": 60 },
      { "name": "UI/UX Design", "percentage": 80 },
      { "name": "Testing & Debugging", "percentage": 80 }
    ],
    "futureImprovements": [
      "Implement iOS version",
      "Add offline functionality",
      "Enhance security features"
    ],
    "metrics": ["80% bug resolution", "50% API response time reduction"]
  },
  "CoveyBot": {
    "name": "COVEY Discord Bot",
    "slug": "CoveyBot",
    "description": "Created a Discord bot enabling users to play minigames and assisting with moderation tasks. Used multiple JavaScript APIs to enhance user experience and taught a new developer to maintain the project.",
    "shortDescription": "Interactive Discord bot for games and moderation",
    "fullDescription": "COVEY is a feature-rich Discord bot developed using JavaScript, Node.js, and the Discord.js API. The bot provides entertainment through various minigames while also offering powerful moderation tools to help server administrators maintain their communities. The project involved integrating multiple JavaScript APIs to enhance functionality and user experience. As part of the development process, I also mentored a junior developer, teaching them how to maintain and extend the bot's capabilities.",
    "problem": "Discord servers often lack engaging interactive elements and require manual moderation, making community management time-consuming.",
    "solution": "COVEY Discord Bot provides both entertainment through minigames and automated moderation tools to improve server engagement and reduce administrative burden.",
    "tags": ["JavaScript", "Node.js", "Discord.js", "APIs"],
    "images": [
      "/images/projects/CoveyBot/about.png",
      "/images/projects/CoveyBot/voting.png",
      "/images/projects/CoveyBot/video.png"
    ],
    "github": "https://github.com/JaysonAcosta5704/Discord-Bot",
    "liveDemo": null,
    "date": "03/2020 - 01/2023",
    "featured": false,
    "category": "Bot Development",
    "features": [
      "Multiple minigames for user engagement",
      "Automated moderation tools",
      "Custom command creation",
      "Role management capabilities"
    ],
    "challenges": [
      "Handling Discord API rate limits",
      "Designing engaging minigames with limited interfaces",
      "Implementing effective error handling"
    ],
    "learnings": [
      "Gained experience with Discord.js and bot development",
      "Improved understanding of event-driven programming",
      "Learned techniques for knowledge transfer to new developers"
    ],
    "futureImprovements": [
      "Add voice channel interactivity",
      "Implement AI-powered moderation tools",
      "Develop cross-server functionality"
    ],
    "metrics": [
      "Multiple JavaScript APIs integration",
      "Knowledge transfer to new developer"
    ]
  },
  "TimePlanX": {
    "name": "TimePlanX Calendar Application",
    "slug": "TimePlanX",
    "description": "Designed a comprehensive calendar application in Java and XML, integrating features such as events, notes, and time blocks for streamlined user experience. Leveraged AI for method creation and design features.",
    "shortDescription": "Comprehensive calendar app with AI-enhanced features",
    "fullDescription": "TimePlanX is a sophisticated calendar application built with Java and XML for Android devices. The app goes beyond basic calendar functionality by integrating comprehensive event management, note-taking capabilities, and innovative time-blocking features for effective time management. A unique aspect of this project was the integration of AI technologies to assist with method creation and design optimization, resulting in cleaner code and more intuitive user interfaces.",
    "problem": "Traditional calendar apps often lack flexibility for different planning needs and don't provide integrated note-taking or time-blocking capabilities.",
    "solution": "TimePlanX combines traditional calendar functionality with modern planning techniques like time-blocking and integrated notes, enhanced by AI-generated suggestions.",
    "tags": ["Java", "XML", "Android SDK", "APIs"],
    "images": [],
    "github": "https://github.com/JaysonAcosta5704/TimeplanX",
    "liveDemo": null,
    "date": "01/2023 - 06/2023",
    "featured": false,
    "category": "Mobile Development",
    "features": [
      "Event scheduling with reminders",
      "Time blocking for productivity",
      "Integrated note-taking",
      "AI-suggested planning improvements",
      "Data synchronization across devices"
    ],
    "challenges": [
      "Integrating the Calendar API with custom features",
      "Implementing an intuitive UI for complex planning tasks",
      "Ensuring reliable data persistence and synchronization"
    ],
    "learnings": [
      "Deepened knowledge of Android development",
      "Gained experience with AI integration in mobile apps",
      "Improved UI/UX design skills for productivity applications"
    ],
    "metrics": [
      "AI-powered planning suggestions",
      "Streamlined time management"
    ]
  },
  "AIBrowser": {
    "name": "AI Browser Web Extension",
    "slug": "AIBrowser",
    "description": "Developed a Chrome Web Extension for streamlined access to online AI platforms. Designed an intuitive user interface with one-click access to various AI tools across the web.",
    "shortDescription": "Chrome extension for quick access to AI tools",
    "fullDescription": "The AI Browser Web Extension is a Chrome browser extension designed to provide users with quick and convenient access to a variety of AI tools and platforms. The extension features a clean, intuitive interface that allows users to launch their favorite AI tools with a single click, saving time and improving workflow efficiency. The project required a deep understanding of Chrome's Extension API and careful consideration of user experience design principles.",
    "problem": "Users who work with multiple AI tools face friction switching between different platforms and services, often requiring multiple clicks or browser tabs.",
    "solution": "This extension centralizes access to popular AI tools in a single, accessible interface, reducing the cognitive load and time spent navigating between services.",
    "tags": ["JavaScript", "HTML5", "CSS3"],
    "images": [],
    "github": "https://github.com/JaysonAcosta5704/AI-Browser",
    "liveDemo": null,
    "date": "11/2023 - 02/2024",
    "featured": false,
    "category": "Web Development",
    "features": [
      "One-click access to AI platforms",
      "Customizable tool list",
      "Clean and intuitive interface",
      "Keyboard shortcuts",
      "Recently used tools section"
    ],
    "challenges": [
      "Working within Chrome Extension API limitations",
      "Designing an intuitive UI that doesn't overwhelm users",
      "Maintaining performance with multiple service integrations"
    ],
    "learnings": [
      "Gained in-depth knowledge of browser extension development",
      "Improved JavaScript skills for browser integration",
      "Learned techniques for optimizing user workflows"
    ],
    "metrics": ["One-click access to tools", "Reduced workflow friction"]
  },
  "Portfolio": {
    "name": "Portfolio",
    "slug": "Portfolio",
    "description": "Personal portfolio website showcasing projects and skills. Built with React and modern web technologies to create a responsive and interactive user experience.",
    "shortDescription": "Personal showcase website built with React",
    "fullDescription": "This portfolio website serves as a professional showcase of my skills, projects, and experience. Built using React, the site features responsive design principles that ensure optimal viewing across various devices and screen sizes. The project demonstrates proficiency in modern frontend development techniques, including component-based architecture, state management, and CSS styling with Bootstrap. The portfolio includes interactive elements to engage visitors and present information in a clear, visually appealing manner.",
    "tags": ["React", "CSS3"],
    "images": [],
    "github": "https://github.com/JaysonAcosta5704/portfolio",
    "liveDemo": null,
    "date": "03/2024 - Present",
    "featured": false,
    "category": "Web Development",
    "features": [
      "Responsive design for all device sizes",
      "Interactive project showcase",
      "Clean and modern UI",
      "Optimized performance",
      "Easy content updates through JSON data"
    ],
    "challenges": [
      "Designing a layout that effectively showcases diverse projects",
      "Implementing responsive design that works across all devices",
      "Balancing visual appeal with performance considerations"
    ],
    "learnings": [
      "Deepened understanding of React component architecture",
      "Improved skills in responsive design implementation",
      "Learned effective content organization strategies"
    ],
    "metrics": ["Responsive across all devices", "Fast loading times"]
  }
}
